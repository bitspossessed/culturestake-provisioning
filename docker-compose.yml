version: '3'

volumes:
  certs:
  conf:
  data:
  html:
  ipfs:
  vhost.d:

services:
  db:
    image: postgres:12.2-alpine
    container_name: culturestake-db
    env_file:
      - .env
    volumes:
      - ./db/init-dbs.sh:/docker-entrypoint-initdb.d/init-dbs.sh
      - data:/var/lib/postgresql/data

  redis:
    image: redis:6.0.1-alpine
    container_name: culturestake-redis
    env_file:
      - .env

  nginx:
    image: nginx:1.19.1-alpine
    container_name: culturestake-nginx-proxy
    depends_on:
      - db
    ports:
      - "80:80"
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - vhost.d:/etc/nginx/vhost.d

  gen:
    image: jwilder/docker-gen:0.7.0
    container_name: culturestake-nginx-gen
    depends_on:
      - nginx
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - vhost.d:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    command: -notify-sighup culturestake-nginx-proxy -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    container_name: culturestake-ipfs-node
    ports:
      - "5001:5001"
    volumes:
      - ipfs:/data/ipfs

  graph:
    image: graphprotocol/graph-node:v0.18.0
    container_name: culturestake-graph-node
    depends_on:
      - db
      - ipfs
    ports:
      - "8001:8001"
      - "8020:8020"
      - "8030:8030"
      - "8040:8040"
    environment:
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
      - LETSENCRYPT_HOST=${HOST_GRAPH_NODE}
      - VIRTUAL_HOST=${HOST_GRAPH_NODE}
      - VIRTUAL_PORT=8000
      - ethereum=${SUBGRAPH_NETWORK}:${ETHEREUM_NODE_ENDPOINT}
      - ipfs=ipfs:5001
      - postgres_db=${POSTGRES_DATABASE_GRAPH_NODE}
      - postgres_host=db:5432
      - postgres_pass=${POSTGRES_PASSWORD}
      - postgres_user=${POSTGRES_USER}
